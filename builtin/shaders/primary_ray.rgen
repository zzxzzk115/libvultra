#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_shader_image_load_formatted : enable

#include "resources/camera_block.glsl"
#include "lib/raygen_utils.glsl"

layout(set = 3, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 3, binding = 1) uniform image2D image;

struct HitValue {
    vec3 color;
    vec3 ddx;
    vec3 ddy;
};
layout(location = 0) rayPayloadEXT HitValue hitValue;

void main()
{
    Ray ray = makePrimaryRay(gl_LaunchIDEXT.xy, gl_LaunchSizeEXT.xy);
    Ray rayDX = makePrimaryRayDX(gl_LaunchIDEXT.xy, gl_LaunchSizeEXT.xy);
    Ray rayDY = makePrimaryRayDY(gl_LaunchIDEXT.xy, gl_LaunchSizeEXT.xy);

    hitValue.color = vec3(0.0);
    hitValue.ddx = rayDX.direction;
    hitValue.ddy = rayDY.direction;
    traceRayEXT(topLevelAS, gl_RayFlagsNoneEXT, 0xff, 0, 0, 0, ray.origin, 0.001, ray.direction, 10000.0, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue.color, 0.0));
}