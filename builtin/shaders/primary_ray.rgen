#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_EXT_shader_image_load_formatted : enable

#include "resources/camera_block.glsl"

layout(set = 3, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 3, binding = 1) uniform image2D image;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main()
{
    vec2 uv  = (vec2(gl_LaunchIDEXT.xy) + 0.5) / vec2(gl_LaunchSizeEXT.xy);
    vec2 ndc = uv * 2.0 - 1.0;

    vec4 clip  = vec4(ndc, 0.0, 1.0);
    vec4 world = u_Camera.inversedViewProjection * clip;
    world /= world.w;

    vec3 origin    = u_Camera.inversedView[3].xyz;
    vec3 direction = normalize(world.xyz - origin);

    hitValue = vec3(0.0);
    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0,
                origin, 0.001, direction, 10000.0, 0);

    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(hitValue, 0.0));
}